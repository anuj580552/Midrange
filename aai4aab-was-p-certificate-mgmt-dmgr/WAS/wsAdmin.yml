---
- name: create temporary file wsadmin input
  tempfile:
    state: file
    suffix: temp
  register: tempfile_1
- name: where is the file
  debug:
    msg: "{{ tempfile_1.path }}"
    verbosity: 1

- name: write wsadmin string to file
  copy:
    content: "{{ wasCommandString }}"
    dest: "{{ tempfile_1.path }}"
    mode: '644'

- name: invoke wsadmin
  #command: /appl/was/profiles/dmgr/bin/wsadmin.sh -lang jython -f {{ tempfile_1.path }}
  aai4aab.websphere.wsadmin:
    profile_name: 'dmgr'
    #params: "-connType NONE"
    script_file: '{{ tempfile_1.path }}'
  register: results_wsadmin

- name: filter out the result line we don't need
  set_fact:
    stdout_lines: "{{ results_wsadmin.stdout }}"

- name: replace the output lines with filterd version
  set_fact:
     results_wsadmin: "{{ results_wsadmin | combine({'output_lines': stdout_lines }) }}"

- name: debug wsadmin result
  debug:
    msg: "{{ results_wsadmin }}"
    verbosity: 1

- name: cleanup temp file
  file:
    path: "{{ tempfile_1.path }}"
    state: absent
  when: tempfile_1.path is defined  
