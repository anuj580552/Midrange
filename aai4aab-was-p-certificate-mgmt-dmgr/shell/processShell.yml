---
- name: create temporary file shell input
  tempfile:
    state: file
    suffix: temp
  register: tempfile_1
- name: where is the file
  debug:
    msg: "{{ tempfile_1.path }}"
    verbosity: 1

- name: write script string to file
  copy:
    content: "{{ inputString }}"
    dest: "{{ tempfile_1.path }}"
    mode: '755'

- name: invoke shell scrip
  shell: "{{ tempfile_1.path }}"
#  become: yes
#  become_user: wasusr
#  become_method: sudo
  register: results_shell


#- set_fact:
#    stdout_lines: {}
- set_fact:
    stdout_lines: "{{ item }}"
  with_items: "{{  results_shell['stdout_lines'] }}"
  when: "not item.startswith('WASX7209I:') "

- set_fact:
     results_shell: "{{ results_shell | combine({'output_lines': stdout_lines }) }}"

- name: debug shell result
  debug:
    msg: "{{ results_shell }}"
    verbosity: 1

- name: cleanup temp file
  file:
    path: "{{ tempfile_1.path }}"
    state: absent
  when: tempfile_1.path is defined  