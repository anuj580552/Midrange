---
###
# findAllP12.yml :
#
# This play setup directoy to work with the PEM when not exists
# Checks if the STG directory exists and find all P12 stores 
#
# return the P12 overview in the fact
###
- set_fact:
    certDetails: "{{ lookup('template', './templates/certificateDetailsFind.json.j2')   }}"
- name: create work directory certifcate results
  block:
    - file:
        path: "{{ certificateWorkDir }}" 
        state: directory
        mode: "u=rwx,g=rx,o="
      register: _p12localresult
    - set_fact:
        certDetails: "{{ lookup('template', './templates/certificateDetailsFind.json.j2')   }}"
      vars: 
        inArray: "{{ certDetails }}"
        inWorkDirectory: "{{ _p12localresult }}"
    - stat:
        path: "{{ stgCertificateSourceDir }}"
      register: _p12localresult
    - set_fact:
        certDetails: "{{ lookup('template', './templates/certificateDetailsFind.json.j2')   }}"
      vars: 
        inArray: "{{ certDetails }}"
        inSTGDirectory: "{{ _p12localresult }}"
    - name: STG directory exists
      block:
        - find:
            path: "{{ certDetails.directory.stg.stat.path }}"
            patterns: "^.*?\\.(?:p12)$"
            use_regex: True
            recurse: yes
          register: _localP12KeyStores
        - include_tasks: ./getP12StoreFacts.yml
          vars:
            P12StoreFile: "{{ item }}"
          loop: "{{ _localP12KeyStores.files }}"
          when: >- 
            item is defined and 
            item.rgrp
      when: certDetails.directory.accessible
    - file:
        path: "{{ certificateWorkDir }}" 
        state: absent